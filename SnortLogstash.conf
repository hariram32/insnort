input {
	file {
		path => "/var/log/snort/alert"
		type => snort 
		start_position => "beginning"
	}
}

filter {
	grok {
	      match => { "message" => "^%{DATA:logtimestamp}\s+\[\*\*\]\s+\[%{INT:gid}:%{INT:sid}:%{INT:rid}\]\s+%{DATA:alert}\s\[\*\*\]\s+\[Classification:\s+%{DATA:classification}\]\s+\[Priority:\s+%{INT:priority}\]\s+\{%{DATA:protocol}\}\s+%{IP:SrcIp}:%{INT:SrcPort}\s+->\s+%{IP:DstIp}:%{INT:DstPort}" }
	      match => { "message" => "^%{DATA:logtimestamp}\s+\[\*\*\]\s+\[%{INT:gid}:%{INT:sid}:%{INT:rid}\]\s+%{DATA:alert}\s\[\*\*\]\s+\[Classification:\s+%{DATA:classification}\]\s+\[Priority:\s+%{INT:priority}\]\s+\{%{DATA:protocol}\}\s+%{IP:SrcIp}\s+->\s+%{IP:DstIp}" }
    	}
    	date {
	      	locale => "en"
      		match => ["logtimestamp", "MM/dd-HH:mm:ss.SSSSSS"]
      		target => "@timestamp"
    	}
	geoip {
      		source => "SrcIp"
      		target => "geoip"
      		database => "/etc/logstash/GeoLiteCity.dat"
      		add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      		add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    	}
	mutate {
		convert => { "[geoip][coordinates]" => "float" }
	}
	mutate {
      		convert => [ "SrcPort", "integer" ]
      		convert => [ "DstPort", "integer" ]
      		convert => [ "priority", "integer" ]
      		remove_field => [ "message"]
	}
	if [protocol] == "TCP" {
		mutate { add_field => { "Flow" => "%{SrcIp}:%{SrcPort} - %{DstIp}:%{DstPort}" } }
	}
	else {
		mutate { add_field => { "Flow" => "%{SrcIp} - %{DstIp}" } }
	}
	if [priority] == 1 { mutate { add_field => { "severity" => "High" } } }
	if [priority] == 2 { mutate { add_field => { "severity" => "Medium" } } }
	if [priority] == 3 { mutate { add_field => { "severity" => "Low" } } }
}

output {
	elasticsearch {  hosts => ["localhost:9200"] }
}

